const fs = require('fs');
const path = require('path');
const { generateWAMessageFromContent } = require('@whiskeysockets/baileys');
const { getSettings } = require('../../Database/config');

module.exports = {
  name: 'menu',
  aliases: ['help', 'commands', 'list'],
  description: 'Displays the Toxic-MD command menu with interactive buttons',
  run: async (context) => {
    const { client, m, mode, pict, botname, text, prefix } = context;

    if (text) {
      await client.sendMessage(
        m.chat,
        {
          text: `‚óà‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚óà\n‚îÇ‚ùí Yo ${m.pushName}, what's with the extra bullshit? Just say *${prefix}menu*, moron. üñï\n‚îó‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îõ`,
        },
        { quoted: m, ad: true }
      );
      return;
    }

    const settings = await getSettings();
    const effectivePrefix = settings.prefix || '.'; // Dynamic prefix from database

    // Fancy font converter
    const toFancyFont = (text, isUpperCase = false) => {
      const fonts = {
        A: 'ùòº', B: 'ùòΩ', C: 'ùòæ', D: 'ùòø', E: 'ùôÄ', F: 'ùôÅ', G: 'ùôÇ', H: 'ùôÉ', I: 'ùôÑ', J: 'ùôÖ', K: 'ùôÜ', L: 'ùôá', M: 'ùôà',
        N: 'ùôâ', O: 'ùôä', P: 'ùôã', Q: 'ùôå', R: 'ùôç', S: 'ùôé', T: 'ùôè', U: 'ùôê', V: 'ùôë', W: 'ùôí', X: 'ùôì', Y: 'ùôî', Z: 'ùôï',
        a: 'ùôñ', b: 'ùôó', c: 'ùôò', d: 'ùôô', e: 'ùôö', f: 'ùôõ', g: 'ùôú', h: 'ùôù', i: 'ùôû', j: 'ùôü', k: 'ùô†', l: 'ùô°', m: 'ùô¢',
        n: 'ùô£', o: 'ùô§', p: 'ùô•', q: 'ùô¶', r: 'ùôß', s: 'ùô®', t: 'ùô©', u: 'ùô™', v: 'ùô´', w: 'ùô¨', x: 'ùô≠', y: 'ùôÆ', z: 'ùôØ',
      };
      return (isUpperCase ? text.toUpperCase() : text.toLowerCase())
        .split('')
        .map((char) => fonts[char] || char)
        .join('');
    };

    // Menu text with Toxic-MD flair
    const menuText = `‚óà‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚óà\n‚îÇ‚ùí *Welcome to ${botname}, B*tches!* üòà\n\n` +
      `ü§ñ *BœÉ∆ö*: ${botname} (bow down)\n` +
      `üî£ *P…æ“ΩœùŒπx*: ${effectivePrefix} (learn it, dumbass)\n` +
      `üåê *MœÉ‘É“Ω*: ${mode} (deal with it)\n` +
      `\n‚óà‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚óà\n\n` +
      `*Select an option Below, Loser.* üòà`;

    // Interactive message with buttons using dynamic prefix
    const msg = generateWAMessageFromContent(
      m.chat,
      {
        interactiveMessage: {
          header: {
            documentMessage: {
              url: 'https://mmg.whatsapp.net/v/t62.7119-24/539012045_745537058346694_1512031191239726227_n.enc?ccb=11-4&oh=01_Q5Aa2QGGiJj--6eHxoTTTTzuWtBgCrkcXBz9hN_y2s_Z1lrABA&oe=68D7901C&_nc_sid=5e03e0&mms3=true',
              mimetype: 'image/png',
              fileSha256: '+gmvvCB6ckJSuuG3ZOzHsTBgRAukejv1nnfwGSSSS/4=',
              fileLength: '1435',
              pageCount: 0,
              mediaKey: 'MWO6fI223TY8T0i9onNcwNBBPldWfwp1j1FPKCiJFzw=',
              fileName: 'Toxic-MD',
              fileEncSha256: 'ZS8v9tio2un1yWVOOG3lwBxiP+mNgaKPY9+wl5pEoi8=',
              directPath: '/v/t62.7119-24/539012045_745537058346694_1512031191239726227_n.enc?ccb=11-4&oh=01_Q5Aa2QGGiJj--6eHxoTTTTzuWtBgCrkcXBz9hN_y2s_Z1lrABA&oe=68D7901C&_nc_sid=5e03e0',
              mediaKeyTimestamp: '1756370084',
              jpegThumbnail: pict,
            },
            hasMediaAttachment: true,
          },
          body: { text: menuText },
          footer: { text: `PœÉ…Ø“Ω…æ“Ω‘É ·Ç¶·Éß ${botname}` },
          nativeFlowMessage: {
            buttons: [
              {
                name: 'cta_url',
                buttonParamsJson: JSON.stringify({
                  display_text: 'GitHub Repo',
                  url: 'https://github.com/xhclintohn/Toxic-MD',
                  merchant_url: 'https://github.com/xhclintohn/Toxic-MD',
                }),
              },
              {
                name: 'single_select',
                buttonParamsJson: JSON.stringify({
                  title: 'VIEW OPTIONS',
                  sections: [
                    {
                      title: 'üî• CORE COMMANDS',
                      highlight_label: '¬© Toxic-MD',
                      rows: [
                        { title: 'üìú FULL MENU', description: 'Show all commands', id: `${effectivePrefix}fullmenu` },
                        { title: '‚ö†Ô∏è DEV', description: "Send developer's contact", id: `${effectivePrefix}dev` },
                      ],
                    },
                    {
                      title: '‚Ñπ BOT INFO',
                      highlight_label: '¬© Toxic-MD',
                      rows: [
                        { title: 'üî• PING', description: 'Check bot speed', id: `${effectivePrefix}ping` },
                        { title: 'üíØ REPO', description: 'Get bot repository', id: `${effectivePrefix}repo` },
                      ],
                    },
                  ],
                }),
              },
            ],
            messageParamsJson: JSON.stringify({
              limited_time_offer: {
                text: 'Toxic-MD',
                url: 'https://github.com/xhclintohn/Toxic-MD',
                copy_code: 'TOXIC',
                expiration_time: Date.now() * 1000,
              },
              bottom_sheet: {
                in_thread_buttons_limit: 2,
                divider_indices: [1, 2],
                list_title: 'Select Command',
                button_title: 'Toxic-MD',
              },
            }),
          },
          contextInfo: {
            externalAdReply: {
              title: `${botname}`,
              body: `Yo, ${m.pushName}! Ready to fuck shit up?`,
              mediaType: 1,
              thumbnail: pict,
              mediaUrl: '',
              sourceUrl: 'https://github.com/xhclintohn/Toxic-MD',
              showAdAttribution: false,
              renderLargerThumbnail: true,
            },
          },
        },
      },
      { quoted: m }
    );

    await client.relayMessage(m.chat, msg.message, { messageId: msg.key.id });

    // Audio message logic
    const possibleAudioPaths = [
      path.join(__dirname, 'xh_clinton', 'menu.mp3'),
      path.join(process.cwd(), 'xh_clinton', 'menu.mp3'),
      path.join(__dirname, '..', 'xh_clinton', 'menu.mp3'),
    ];

    let audioPath = null;
    for (const possiblePath of possibleAudioPaths) {
      if (fs.existsSync(possiblePath)) {
        audioPath = possiblePath;
        break;
      }
    }

    if (audioPath) {
      await client.sendMessage(
        m.chat,
        {
          audio: { url: audioPath },
          ptt: true,
          mimetype: 'audio/mpeg',
          fileName: 'menu.mp3',
        },
        { quoted: m }
      );
    }
  },
};